"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/components/layout/LanguageSwitcher.tsx":
/*!****************************************************!*\
  !*** ./src/components/layout/LanguageSwitcher.tsx ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _contexts_LanguageContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/contexts/LanguageContext */ \"./src/contexts/LanguageContext.tsx\");\n// This component is no longer needed as we're using Swedish only.\n// Empty placeholder component to avoid breaking imports.\n\nvar _s = $RefreshSig$();\n\n\nconst LanguageSwitcher = ()=>{\n    _s();\n    const [showDropdown, setShowDropdown] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const dropdownRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const { language, changeLanguage, isRTL } = (0,_contexts_LanguageContext__WEBPACK_IMPORTED_MODULE_2__.useLanguage)();\n    const [googleTranslateLoaded, setGoogleTranslateLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [translationInProgress, setTranslationInProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const languages = [\n        {\n            code: \"sv\",\n            name: \"Svenska\",\n            flag: \"\\uD83C\\uDDF8\\uD83C\\uDDEA\"\n        },\n        {\n            code: \"da\",\n            name: \"Dansk\",\n            flag: \"\\uD83C\\uDDE9\\uD83C\\uDDF0\"\n        },\n        {\n            code: \"ar\",\n            name: \"العربية\",\n            flag: \"\\uD83C\\uDDE6\\uD83C\\uDDEA\"\n        }\n    ];\n    // Close dropdown when clicking outside\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleClickOutside = (event)=>{\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n                setShowDropdown(false);\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return ()=>{\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, []);\n    // Find current language display\n    const currentLanguage = languages.find((lang)=>lang.code === language) || languages[0];\n    // Initialize Google Translate API\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Check if this is a reload after language change to prevent loops\n        const languageChanged = sessionStorage.getItem(\"languageChanged\");\n        if (languageChanged) {\n            // Clear the flag so future manual changes will work\n            sessionStorage.removeItem(\"languageChanged\");\n            console.log(\"Detected reload after language change\");\n        }\n        // Create a new div to hold the Google Translate widget\n        const createGoogleTranslateElement = ()=>{\n            // Remove any existing elements\n            const existingElement = document.getElementById(\"google_translate_element\");\n            if (existingElement) {\n                existingElement.innerHTML = \"\";\n            } else {\n                const div = document.createElement(\"div\");\n                div.id = \"google_translate_element\";\n                div.style.position = \"absolute\";\n                div.style.top = \"-9999px\";\n                div.style.left = \"-9999px\";\n                document.body.appendChild(div);\n            }\n        };\n        // Create the element\n        createGoogleTranslateElement();\n        // Helper to hide Google Translate UI elements\n        const hideGoogleTranslateUI = ()=>{\n            // Hide the banner iframe that sometimes appears\n            const bannerFrames = document.querySelectorAll(\".goog-te-banner-frame, .skiptranslate\");\n            bannerFrames.forEach((frame)=>{\n                if (frame instanceof HTMLElement) {\n                    frame.style.display = \"none\";\n                }\n            });\n            // Make sure body is not shifted\n            document.body.style.top = \"0px\";\n            // Fix any visibility issues with the rest of the site\n            document.body.classList.remove(\"overflow-hidden\");\n        };\n        // Call this function immediately and also set up an interval\n        hideGoogleTranslateUI();\n        // Keep checking for Google elements that might appear later\n        const hideInterval = setInterval(hideGoogleTranslateUI, 300);\n        setTimeout(()=>clearInterval(hideInterval), 5000); // Clear after 5 seconds\n        // Check for existing translation from cookies\n        const checkExistingTranslation = ()=>{\n            var _document_cookie_split_find;\n            const cookieTranslation = (_document_cookie_split_find = document.cookie.split(\"; \").find((row)=>row.startsWith(\"googtrans=\"))) === null || _document_cookie_split_find === void 0 ? void 0 : _document_cookie_split_find.split(\"=\")[1];\n            if (cookieTranslation) {\n                console.log(\"Found existing translation cookie:\", cookieTranslation);\n                const langCode = cookieTranslation.split(\"/\").pop();\n                if (langCode && langCode !== \"sv\") {\n                    // Update our context to match the cookie\n                    setTimeout(()=>{\n                        changeLanguage(langCode);\n                    }, 500);\n                }\n            }\n        };\n        checkExistingTranslation();\n        // Define the global callback function\n        window.googleTranslateElementInit = ()=>{\n            console.log(\"Google Translate initialization called\");\n            const translateElement = new window.google.translate.TranslateElement({\n                pageLanguage: \"sv\",\n                includedLanguages: \"sv,da,ar\",\n                layout: window.google.translate.TranslateElement.InlineLayout.SIMPLE,\n                autoDisplay: false,\n                gaTrack: true\n            }, \"google_translate_element\");\n            setGoogleTranslateLoaded(true);\n            console.log(\"Google Translate initialized\");\n            // Final check after Google Translate has initialized\n            setTimeout(hideGoogleTranslateUI, 1000);\n        };\n        // Add Google Translate script if not already present\n        const addScript = ()=>{\n            if (document.querySelector('script[src*=\"translate.google.com/translate_a/element.js\"]')) {\n                console.log(\"Google Translate script already exists\");\n                if (window.google && window.google.translate) {\n                    console.log(\"Google Translate object already loaded\");\n                    setGoogleTranslateLoaded(true);\n                }\n                return null;\n            }\n            console.log(\"Adding Google Translate script\");\n            const script = document.createElement(\"script\");\n            script.src = \"https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit\";\n            script.async = true;\n            document.body.appendChild(script);\n            return script;\n        };\n        const script = addScript();\n        // Cleanup function\n        return ()=>{\n            if (script && script.parentNode) {\n                script.parentNode.removeChild(script);\n            }\n            clearInterval(hideInterval);\n        };\n    }, [\n        language,\n        changeLanguage\n    ]);\n    // Function to force language change by directly manipulating the select element\n    const forceLanguageChange = (langCode)=>{\n        try {\n            // Method 1: Try to set cookies directly (most reliable)\n            setCookieApproach(langCode);\n            // Method 2: Find the Google Translate select element\n            const selectElement = document.querySelector(\".goog-te-combo\");\n            if (selectElement) {\n                console.log(\"Found Google Translate select element, setting to\", langCode);\n                // Directly set the value\n                selectElement.value = langCode;\n                // Trigger change events\n                selectElement.dispatchEvent(new Event(\"change\", {\n                    bubbles: true\n                }));\n                // Try to find and click the appropriate option\n                const options = selectElement.options;\n                for(let i = 0; i < options.length; i++){\n                    if (options[i].value === langCode) {\n                        options[i].selected = true;\n                        break;\n                    }\n                }\n                // Try direct click\n                selectElement.click();\n                // As a last resort, try to directly inject the translate code\n                if (window.google && window.google.translate) {\n                    console.log(\"Calling Google Translate API directly\");\n                    const translateElement = document.getElementById(\"google_translate_element\");\n                    if (translateElement) {\n                        // Clear and re-initialize\n                        translateElement.innerHTML = \"\";\n                        new window.google.translate.TranslateElement({\n                            pageLanguage: \"sv\",\n                            includedLanguages: \"sv,da,ar\",\n                            layout: window.google.translate.TranslateElement.InlineLayout.SIMPLE,\n                            autoDisplay: false\n                        }, \"google_translate_element\");\n                        // Wait a brief moment and then try again\n                        setTimeout(()=>{\n                            const newSelectElement = document.querySelector(\".goog-te-combo\");\n                            if (newSelectElement) {\n                                newSelectElement.value = langCode;\n                                newSelectElement.dispatchEvent(new Event(\"change\", {\n                                    bubbles: true\n                                }));\n                            }\n                        }, 500);\n                    }\n                }\n                return true;\n            } else {\n                console.warn(\"Google Translate select element not found\");\n                return false;\n            }\n        } catch (error) {\n            console.error(\"Error forcing language change:\", error);\n            return false;\n        }\n    };\n    // More direct approach using cookies\n    const setCookieApproach = (langCode)=>{\n        try {\n            var _document_cookie_split_find;\n            // Check if we're already on the correct language to prevent refresh loops\n            const currentCookie = (_document_cookie_split_find = document.cookie.split(\"; \").find((row)=>row.startsWith(\"googtrans=\"))) === null || _document_cookie_split_find === void 0 ? void 0 : _document_cookie_split_find.split(\"=\")[1];\n            // Extract current language from cookie\n            const currentLang = currentCookie === null || currentCookie === void 0 ? void 0 : currentCookie.split(\"/\").pop();\n            // If we're already on the correct language, don't reload\n            if (currentLang === langCode || currentLang === undefined && langCode === \"sv\") {\n                console.log(\"Already using the selected language, no reload needed\");\n                return true;\n            }\n            // Map our codes to Google's language codes\n            const googleLangMap = {\n                \"sv\": \"\",\n                \"da\": \"da\",\n                \"ar\": \"ar\"\n            };\n            const googleLang = googleLangMap[langCode] || \"\";\n            if (langCode === \"sv\") {\n                // For original language, we need to remove the cookie\n                document.cookie = \"googtrans=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n                document.cookie = \"googtrans=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=\" + window.location.hostname;\n                document.cookie = \"googtrans=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=.\" + window.location.hostname;\n                // Add flag to prevent reload loops\n                sessionStorage.setItem(\"languageChanged\", \"true\");\n                // Force a page reload to ensure translation is reset\n                console.log(\"Reloading to reset to original language\");\n                window.location.reload();\n            } else {\n                // For other languages, set the appropriate cookie\n                const domain = window.location.hostname;\n                // Set cookies at both domain levels (sometimes required)\n                document.cookie = \"googtrans=/sv/\".concat(googleLang, \"; path=/;\");\n                document.cookie = \"googtrans=/sv/\".concat(googleLang, \"; path=/; domain=\").concat(domain);\n                document.cookie = \"googtrans=/sv/\".concat(googleLang, \"; path=/; domain=.\").concat(domain);\n                // Add flag to prevent reload loops\n                sessionStorage.setItem(\"languageChanged\", \"true\");\n                // Force page refresh for translation to take effect\n                console.log(\"Reloading page to apply translation\");\n                window.location.reload();\n            }\n            console.log(\"Cookie approach attempted for\", langCode);\n            return true;\n        } catch (error) {\n            console.error(\"Error setting cookies:\", error);\n            return false;\n        }\n    };\n    // Change language function using Google Translate API\n    const handleLanguageChange = (langCode)=>{\n        console.log(\"Changing language to:\", langCode);\n        // Update our context state first\n        changeLanguage(langCode);\n        setShowDropdown(false);\n        setTranslationInProgress(true);\n        // The most reliable approach is directly setting cookies and forcing a page reload\n        setCookieApproach(langCode);\n        // This ensures the UI updates even if reload doesn't happen immediately\n        setTimeout(()=>{\n            setTranslationInProgress(false);\n        }, 5000); // Timeout as a fallback\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative \".concat(isRTL ? \"md:ml-3\" : \"md:mr-3\"),\n        ref: dropdownRef,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"google_translate_element\"\n            }, void 0, false, {\n                fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n                lineNumber: 311,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: \"flex items-center gap-1 px-3 py-2 rounded-md hover:bg-blue-50 transition-colors w-full md:w-auto justify-center md:justify-start\",\n                onClick: ()=>setShowDropdown(!showDropdown),\n                \"aria-expanded\": showDropdown,\n                \"aria-label\": \"Byt spr\\xe5k\",\n                disabled: translationInProgress,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-xl\",\n                        \"aria-hidden\": \"true\",\n                        children: currentLanguage.flag\n                    }, void 0, false, {\n                        fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n                        lineNumber: 321,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-sm font-medium text-slate-700\",\n                        children: currentLanguage.name\n                    }, void 0, false, {\n                        fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n                        lineNumber: 322,\n                        columnNumber: 9\n                    }, undefined),\n                    translationInProgress ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        className: \"animate-spin h-4 w-4 text-blue-600\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                className: \"opacity-25\",\n                                cx: \"12\",\n                                cy: \"12\",\n                                r: \"10\",\n                                stroke: \"currentColor\",\n                                strokeWidth: \"4\"\n                            }, void 0, false, {\n                                fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n                                lineNumber: 325,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                className: \"opacity-75\",\n                                fill: \"currentColor\",\n                                d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                            }, void 0, false, {\n                                fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n                                lineNumber: 326,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n                        lineNumber: 324,\n                        columnNumber: 11\n                    }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        className: \"w-4 h-4 text-slate-600 transition-transform \".concat(showDropdown ? \"rotate-180\" : \"\"),\n                        fill: \"none\",\n                        stroke: \"currentColor\",\n                        viewBox: \"0 0 24 24\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M19 9l-7 7-7-7\"\n                        }, void 0, false, {\n                            fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n                            lineNumber: 335,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n                        lineNumber: 329,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n                lineNumber: 314,\n                columnNumber: 7\n            }, undefined),\n            showDropdown && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute \".concat(isRTL ? \"md:left-0\" : \"md:right-0\", \" top-full mt-1 w-full md:w-40 bg-white rounded-md shadow-lg z-50\"),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"py-1\",\n                        children: languages.map((lang)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: \"w-full text-left px-4 py-2 flex items-center gap-2 hover:bg-blue-50 transition-colors \".concat(language === lang.code ? \"bg-blue-50 font-medium text-blue-600\" : \"text-slate-700\"),\n                                onClick: ()=>handleLanguageChange(lang.code),\n                                disabled: translationInProgress,\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-xl\",\n                                        children: lang.flag\n                                    }, void 0, false, {\n                                        fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n                                        lineNumber: 353,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-sm\",\n                                        children: lang.name\n                                    }, void 0, false, {\n                                        fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n                                        lineNumber: 354,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, lang.code, true, {\n                                fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n                                lineNumber: 345,\n                                columnNumber: 15\n                            }, undefined))\n                    }, void 0, false, {\n                        fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n                        lineNumber: 343,\n                        columnNumber: 11\n                    }, undefined),\n                    !googleTranslateLoaded && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"px-4 py-2 text-xs text-orange-500\",\n                        children: \"Loading translation service...\"\n                    }, void 0, false, {\n                        fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n                        lineNumber: 359,\n                        columnNumber: 13\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n                lineNumber: 342,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/jodiusama/Code/Alison Trafikskola/Alison-trafikskola/src/components/layout/LanguageSwitcher.tsx\",\n        lineNumber: 309,\n        columnNumber: 5\n    }, undefined);\n};\n_s(LanguageSwitcher, \"KRpFcW1+rMM8PAyDDZTOf7Z8SAM=\", false, function() {\n    return [\n        _contexts_LanguageContext__WEBPACK_IMPORTED_MODULE_2__.useLanguage\n    ];\n});\n_c = LanguageSwitcher;\n/* harmony default export */ __webpack_exports__[\"default\"] = (LanguageSwitcher);\nvar _c;\n$RefreshReg$(_c, \"LanguageSwitcher\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/layout/LanguageSwitcher.tsx\n"));

/***/ })

});